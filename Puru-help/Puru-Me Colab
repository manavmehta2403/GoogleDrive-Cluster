{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Puru-Me Colab","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"OXCso-wXhDQ4","colab_type":"code","outputId":"3dea719f-73b8-41e3-8750-de1bb1d81f0f","executionInfo":{"status":"ok","timestamp":1589297885399,"user_tz":-330,"elapsed":2691,"user":{"displayName":"Manav Mehta","photoUrl":"","userId":"05766459901811411844"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Exercise 1: Type the following statements in the Python interpreter tosee what they do:\n","x = 5 ### x = 5\n","x = x + 1  ### x = 5 + 1\n","print(x)  ####abh bola x print kru\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JeHhQx0NifZO","colab_type":"code","outputId":"11e6189c-2867-4d7d-d6c4-e497367070e0","executionInfo":{"status":"ok","timestamp":1589299939681,"user_tz":-330,"elapsed":21085,"user":{"displayName":"Manav Mehta","photoUrl":"","userId":"05766459901811411844"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["#Exercise 2: Write a program that uses input to prompt a user for their name and then welcomes them.\n","##ouput should look like this,\n","'''\n","Enter your name: Chuck\n","Hello Chuck\n","\n","'''\n","name= str(input(\"Enter your name: \"))\n","print(\"Hello\",name)  ##correction please print(\"Hello\",name)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Enter your name: Shiela\n","Hello Shiela\n","What's your age? 24\n","I am 24 years old\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mB5vFKmMqfZc","colab_type":"code","colab":{}},"source":["#Exercise 3: Write a program that uses input to prompt a user for their name and then welcomes them and ask their age.\n","##ouput should look like this,\n","'''\n","Enter your name: Chuck\n","Hello Chuck\n","Whats your age? 8 \n","I am 8 years old\n","\n","'''\n","name= str(input(\"Enter your name: \"))\n","print(\"Hello\",name)  ##correction please print(\"Hello\",name)\n","\n","age= int(input(\"What's your age? \"))\n","print(\"I am\",age,\"years old\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"kgdayagdqsfW","colab_type":"code","outputId":"9f8781ff-7b05-4b7e-d72a-0341083f9951","executionInfo":{"status":"ok","timestamp":1589469294183,"user_tz":-330,"elapsed":16497,"user":{"displayName":"Manav Mehta","photoUrl":"","userId":"05766459901811411844"}},"colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["#Exercise 4: Write a program that uses input to prompt a user for their name and then welcomes them.\n","##ouput should look like this,\n","'''\n","Enter your name: Chuck\n","Hello Chuck\n","What's your age? 8 \n","I am 8 years old\n","You are minor.\n","\n","Enter your name: Puru\n","Hello Puru\n","What's your age? 23 \n","I am 23 years old\n","You can vote.\n","\n","'''\n","##print()\n","name= str(input(\"Enter your name: \"))\n","print(\"Hello\",name)  ##correction please print(\"Hello\",name)\n","\n","age= int(input(\"What's your age? \"))\n","print(\"I am\", age,\"years old\")\n","if age >= 18:  ## eror i is capital in if ## instead < it should >\n","  print(\"You can vote\") ## indention  Y is smaller\n","elif age < 18: ## instead > it should <\n","  print(\"You  are minor\") ## error p is capital in print ## indention Y is smaller\n","\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Enter your name: Puru\n","Hello Puru\n","What's your age? 43\n","I am 43 years old\n","You can vote\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WZmntEaQwe5U","colab_type":"code","outputId":"5e41305d-7ed5-4a16-e507-5d9a911ec55c","executionInfo":{"status":"ok","timestamp":1589471297794,"user_tz":-330,"elapsed":11217,"user":{"displayName":"Manav Mehta","photoUrl":"","userId":"05766459901811411844"}},"colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["#Exercise 3: Write a program to prompt the user for hours and rate per hour to compute gross pay. \n","#Output:\n","'''\n","\n","Enter Hours: 35 \n","Enter Rate: ₹2.75 \n","Pay: ₹96.25 \n","\n","'''\n","\n","hours= int(input(\"Enter Hours: \")) ##parenthesis\n","rate= float(input(\"Enter Rate: ₹\")) ##parenthesis\n","pay= hours*rate\n","print(\"Pay: ₹{}\".format(pay))\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Enter Hours: 35\n","Enter Rate: ₹2.75\n","Pay: ₹96.25\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pighxqB1qb0f","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"578d6901-ae10-466f-a362-44ed0386059f","executionInfo":{"status":"ok","timestamp":1589553055298,"user_tz":-330,"elapsed":6215,"user":{"displayName":"Manav Mehta","photoUrl":"","userId":"05766459901811411844"}}},"source":["#Write divisible by 3 program.\n","\"\"\"\n","Please enter a number: 74\n","It is not divisible by 3.\n","\"\"\"\n","number= int(input(\"Enter the number: \"))\n","if (number % 3 == 0):\n","  print(number, \"is divisible by 3\")###number is a  variable  not string dont add \"\"\n","else:\n","  print(number,\"is not divisible by 3\")"],"execution_count":13,"outputs":[{"output_type":"stream","text":["Enter the number: 34\n","34 is not divisible by 3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GLmGUe66xJRj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"375d9afc-b96d-4061-8c5d-6b17c69ca528","executionInfo":{"status":"ok","timestamp":1589554283111,"user_tz":-330,"elapsed":31941,"user":{"displayName":"Manav Mehta","photoUrl":"","userId":"05766459901811411844"}}},"source":["#Write divisible by 15 program and you cannot use 15 in the code. \n","##hint use factor of 15 except 15 and 1.\n","\"\"\"\n","Enter a number: 74\n","74 is not divisible by 15.\n","\"\"\"\n","number= int(input(\"Enter the number: \"))\n","if (number % (3*5)==0):\n","  print(number, \"is divisible by\", 3*5)###remove \"\" from 3*5 \n","else:\n","  print(number,\"is not divisible by\", 3*5)\n","\n","print(\"Using nested if and else\")\n","## do the same thing using nested if else\n","\"\"\"\n","Enter a number: 74\n","74 is not divisible by 15.\n","\"\"\"\n","\n","if (number % 3==0):\n","  if (number % 5==0):\n","    print(number, \"is divisible by\", 3*5)\n","  else:\n","    print(number,\"is not divisible by\", 3*5)   \n","else:\n","  print(number,\"is not divisible by\", 3*5)"],"execution_count":19,"outputs":[{"output_type":"stream","text":["Enter the number: 1595\n","1595 is not divisible by 15\n","Using nested if and else\n","1595 is not divisible by 15\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"g_QsnQsl0m-M","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":528},"outputId":"572b9d27-a450-400e-ba2e-7726f17d9db2","executionInfo":{"status":"error","timestamp":1589554569166,"user_tz":-330,"elapsed":33454,"user":{"displayName":"Manav Mehta","photoUrl":"","userId":"05766459901811411844"}}},"source":[""],"execution_count":22,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    728\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 729\u001b[0;31m                 \u001b[0mident\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdin_socket\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    730\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/jupyter_client/session.py\u001b[0m in \u001b[0;36mrecv\u001b[0;34m(self, socket, mode, content, copy)\u001b[0m\n\u001b[1;32m    802\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 803\u001b[0;31m             \u001b[0mmsg_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msocket\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_multipart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    804\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mzmq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mZMQError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36mrecv_multipart\u001b[0;34m(self, flags, copy, track)\u001b[0m\n\u001b[1;32m    474\u001b[0m         \"\"\"\n\u001b[0;32m--> 475\u001b[0;31m         \u001b[0mparts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    476\u001b[0m         \u001b[0;31m# have first part already, only loop while more to receive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._recv_copy\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: ","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-22-d1049a5a853f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvar1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Enter anything: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mvar2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Enter anything again: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m##logic\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mtemp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvar1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mvar1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvar2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    702\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    703\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 704\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    705\u001b[0m         )\n\u001b[1;32m    706\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    732\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    733\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 734\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    735\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    736\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]}]}